import 'dart:convert';
import 'package:doitall/home_page.dart';
import 'package:doitall/newregister_page.dart';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'package:shared_preferences/shared_preferences.dart';

class LoginPage extends StatefulWidget {
  const LoginPage({Key? key}) : super(key: key);

  @override
  State<LoginPage> createState() => _LoginPageState();
}

class _LoginPageState extends State<LoginPage> {
  final _formkey = GlobalKey<FormState>();
  final _emailController = TextEditingController();
  final _passwordController = TextEditingController();
  bool _versenha = false;

  Widget _body() {
    return Form(
      key: _formkey,
      child: Column(
        children: [
          SingleChildScrollView(
            child: SizedBox(
              width: MediaQuery.of(context).size.width,
              height: MediaQuery.of(context).size.height,
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Container(
                      height: 100,
                    ),
                    Card(
                      child: Padding(
                        padding: const EdgeInsets.all(6.0),
                        child: Column(
                          children: [
                            TextFormField(
                                controller: _emailController,
                                onChanged: (text) {},
                                keyboardType: TextInputType.emailAddress,
                                decoration: InputDecoration(
                                    filled: true, //<-- SEE HERE
                                    fillColor: Colors.white,
                                    labelText: 'Email',
                                    border: OutlineInputBorder()),
                                validator: (email) {
                                  if (email == null || email.isEmpty) {
                                    return "Digite seu email";
                                  }
                                  return null;
                                }),
                            SizedBox(height: 10),
                            TextFormField(
                                controller: _passwordController,
                                keyboardType: TextInputType.visiblePassword,
                                onChanged: (text) {},
                                obscureText: !_versenha,
                                decoration: InputDecoration(
                                    suffixIcon: IconButton(
                                      icon: Icon(_versenha
                                          ? Icons.visibility_off_outlined
                                          : Icons.visibility_outlined),
                                      onPressed: () {
                                        setState(() {
                                          _versenha = !_versenha;
                                        });
                                      },
                                    ),
                                    filled: true, //<-- SEE HERE
                                    fillColor: Colors.white,
                                    labelText: 'Passowrd',
                                    border: OutlineInputBorder()),
                                validator: (password) {
                                  if (password == null || password.isEmpty) {
                                    return "Digite sua senha";
                                  }
                                  return null;
                                }),
                            SizedBox(height: 15),
                            ElevatedButton(
                                onPressed: () {
                                  if (_formkey.currentState!.validate()) {
                                    login();
                                  }
                                },
                                style: ElevatedButton.styleFrom(
                                  backgroundColor:
                                      Color.fromARGB(0, 175, 175, 175),
                                  padding: EdgeInsets.symmetric(
                                      horizontal: 50, vertical: 20),
                                  textStyle: TextStyle(fontSize: 20),
                                ),
                                child: Text(
                                  'Entrar',
                                  textAlign: TextAlign.center,
                                )),
                            SizedBox(
                              height: 30,
                            ),
                            Center(
                              child: Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceEvenly,
                                children: [
                                  ElevatedButton(
                                      onPressed: () {
                                        if (_formkey.currentState!.validate()) {
                                          login();
                                        }
                                      },
                                      style: ElevatedButton.styleFrom(
                                          backgroundColor:
                                              Color.fromARGB(0, 0, 0, 0),
                                          padding: EdgeInsets.symmetric(
                                              horizontal: 30, vertical: 10),
                                          textStyle: TextStyle(fontSize: 15)),
                                      child: Text(
                                        'Ainda não tenho cadastro',
                                        textAlign: TextAlign.left,
                                      )),
                                  ElevatedButton(
                                      onPressed: () {
                                        Navigator.pushReplacement(
                                          context,
                                          MaterialPageRoute(
                                            builder: (context) =>
                                                NewRegisterPage(),
                                          ),
                                        );
                                      },
                                      style: ElevatedButton.styleFrom(
                                          backgroundColor:
                                              Color.fromARGB(0, 0, 0, 0),
                                          padding: EdgeInsets.symmetric(
                                              horizontal: 30, vertical: 10),
                                          textStyle: TextStyle(fontSize: 15)),
                                      child: Text(
                                        'Esquecia senha',
                                        textAlign: TextAlign.right,
                                      )),
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),
          ),
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        body: Stack(
      children: [
        SizedBox(
            height: MediaQuery.of(context).size.height,
            width: MediaQuery.of(context).size.width,
            child: Image.asset(
              'assets/images/background.png',
              fit: BoxFit.cover,
            )),
        Container(
          color: Colors.black.withOpacity(0.3),
        ),
        _body(),
      ],
    ));
  }

  login() async {
    var url = Uri.parse('http://127.0.0.1:8000/api/login');
    var response = await http.post(
      url,
      body: {
        'password': _passwordController.text,
        'email': _emailController.text,
      },
    );

    SharedPreferences prefs = await SharedPreferences.getInstance();
    var json = jsonDecode((response.body));

    if (json['status'] == 200) {
      String token = (json['token']);
      await prefs.setString('token', 'token $token');
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(
          builder: (context) => HomePage(),
        ),
      );
    }
    if (json['status'] == 500) {
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(
          backgroundColor: Colors.redAccent,
          content: Center(child: Text('Email e senha inválidos')),
          behavior: SnackBarBehavior.floating,
        ),
      );
    }
  }
}
